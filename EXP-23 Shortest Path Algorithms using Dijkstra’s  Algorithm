#include <stdio.h>
#define INF 999

void dijkstra(int a[5][5], int n, int start)
{
    int dist[5], visited[5], i, j, count, min, u;
    for (i = 0; i < n; i++)
    {
        dist[i] = a[start][i];
        visited[i] = 0;
    }
    dist[start] = 0;
    visited[start] = 1;
    for (count = 1; count < n - 1; count++)
    {
        min = INF;
        for (i = 0; i < n; i++)
        {
            if (dist[i] < min && !visited[i])
            {
                min = dist[i];
                u = i;
            }
        }
        visited[u] = 1;
        for (j = 0; j < n; j++)
        {
            if (!visited[j] && dist[u] + a[u][j] < dist[j])
                dist[j] = dist[u] + a[u][j];
        }
    }
    printf("Shortest distances from %d:\n", start);
    for (i = 0; i < n; i++)
        printf("%d ", dist[i]);
}

void main()
{
    int a[5][5] = {
        {0, 10, 3, INF, INF},
        {10, 0, 1, 2, INF},
        {3, 1, 0, 8, 2},
        {INF, 2, 8, 0, 7},
        {INF, INF, 2, 7, 0}};
    dijkstra(a, 5, 0);
}
